// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Not(in=address[14], out=selram);
    Not(in=address[13], out=notaddr13);
    And(a=selram, b=load, out=loadram);

    And(a=address[14], b=notaddr13, out=selscr);
    And(a=selscr, b=load, out=loadscr);

    And(a=address[14], b=address[13], out=temp1);
    Or8Way(in=address[0..7], out=temp2);
    Or(a=address[8], b=address[9], out=temp3);
    Or(a=address[10], b=address[11], out=temp4);
    Or(a=temp2, b=temp3, out=temp5);
    Or(a=temp4, b=address[12], out=temp6);
    Or(a=temp5, b=temp6, out=temp7);
    Not(in=temp7, out=temp8);
    And(a=temp1, b=temp8, out=selkey);

    RAM16K(in=in, load=loadram, address=address[0..13], out=outram);
    Screen(in=in, load=loadscr, address=address[0..12], out=outscr);
    Keyboard(out=outkey);
    Mux16(a=false, b=outkey, sel=selkey, out=out1);
    Mux16(a=out1, b=outscr, sel=selscr, out=out2);
    Mux16(a=out2, b=outram, sel=selram, out=out);
}
